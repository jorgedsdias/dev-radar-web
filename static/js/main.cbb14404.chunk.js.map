{"version":3,"sources":["services/api.js","components/DevForm/index.js","components/DevItem/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","DevForm","onSubmit","currentDev","useState","id","setId","github_username","setGithubUsername","techs","setTechs","latitude","setLatitude","longitude","setLongitude","useEffect","_id","join","location","coordinates","e","a","async","preventDefault","className","htmlFor","name","value","onChange","target","required","href","onClick","navigator","geolocation","getCurrentPosition","position","coords","err","console","log","timeout","icon","faMapMarkerAlt","color","type","DevItem","dev","editDev","removeDev","key","src","avatar_url","alt","bio","window","confirm","App","devs","setDevs","setCurrentDev","delete","filter","get","response","data","loadDevs","post","put","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbb14404.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://my-dev-radar.herokuapp.com'\r\n    // baseURL: 'http://localhost:3333'\r\n});\r\n\r\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction DevForm({ onSubmit, currentDev }) {\r\n    const [id, setId] = useState('');\r\n    const [github_username, setGithubUsername] = useState('');\r\n    const [techs, setTechs] = useState('');\r\n    const [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(currentDev) {\r\n            setId(currentDev._id);\r\n            setGithubUsername(currentDev.github_username);\r\n            setTechs(currentDev.techs.join(\", \"));\r\n            setLatitude(currentDev.location.coordinates[1]);\r\n            setLongitude(currentDev.location.coordinates[0]);\r\n        }\r\n    }, [currentDev]);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        await onSubmit(id,\r\n        {\r\n            github_username,\r\n            techs,\r\n            latitude,\r\n            longitude,\r\n        });\r\n\r\n        setId('');\r\n        setGithubUsername('');\r\n        setTechs('');\r\n    }\r\n\r\n    function getCurrentLocation() {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setLatitude(latitude);\r\n                setLongitude(longitude);\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n            },\r\n            {\r\n              timeout: 30000,\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"github_username\">Github Username</label>\r\n                <input \r\n                    name=\"github_username\" \r\n                    id=\"github_username\" \r\n                    value={github_username}\r\n                    onChange={e => setGithubUsername(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"techs\">Technologies</label>\r\n                <input \r\n                    name=\"techs\" \r\n                    id=\"techs\" \r\n                    required\r\n                    value={techs}\r\n                    onChange={e => setTechs(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"get-location\">\r\n                <a href=\"#\" onClick={getCurrentLocation}><FontAwesomeIcon icon={faMapMarkerAlt} color=\"#8e4dff\" /> - Get Current Location</a>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"latitude\">Latitude</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"latitude\" \r\n                        id=\"latitude\" \r\n                        required \r\n                        value={latitude} \r\n                        onChange={e => setLatitude(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"longitude\">Longitude</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"longitude\" \r\n                        id=\"longitude\" \r\n                        required \r\n                        value={longitude} \r\n                        onChange={e => setLongitude(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DevForm;","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nfunction DevItem({ dev, editDev, removeDev }) {\r\n    return (\r\n        <li key={dev._id} className=\"dev-item\">\r\n            <header>\r\n            <img src={dev.avatar_url} alt={dev.name} />\r\n            <div className=\"user-info\">\r\n                <strong>{dev.name}</strong>\r\n                <span>{dev.techs.join(', ')}</span>\r\n                <p>{dev.bio}</p>\r\n                <p><a href={`https://github.com/${dev.github_username}`} target=\"_blank\">Access github profile</a></p>\r\n                <p>\r\n                    <a href='#' onClick={() => editDev(dev)}><b>Edit</b></a>&nbsp;-&nbsp;\r\n                    <a href='#' onClick={() => { if(window.confirm('Do you really want to delete this Dev?')) { removeDev(dev._id) }} }><b>Delete</b></a>\r\n                </p>\r\n            </div>\r\n            </header>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DevItem;","import React, { useState, useEffect } from 'react';\nimport api from './services/api';\n\nimport './global.css';\nimport './App.css';\nimport './Sidebar.css';\nimport './Main.css';\n\nimport DevForm from './components/DevForm';\nimport DevItem from './components/DevItem';\n\nfunction App() {\n  const [devs, setDevs] = useState([]);\n  const [currentDev, setCurrentDev] = useState('');\n\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\n\n      setDevs(response.data);\n    }\n\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(id, data) {\n    if(!id) {\n      const response = await api.post('/devs', data);\n      setDevs([...devs, response.data]);\n    } else {\n      const response = await api.put(`/devs/${id}`, data);\n      setDevs(devs.map(dev => dev._id === id ? { ...response.data } : dev));\n    }\n  }\n\n  async function removeDev(id) {\n    const response = await api.delete(`/devs/${id}`);\n\n    setDevs(devs.filter(dev => dev._id !== id));\n  }\n\n  function editDev(dev) {\n    setCurrentDev(dev);\n  }\n\n  return (\n    <div id=\"app\">\n      <aside>\n        <strong>Register</strong>\n        <DevForm \n          onSubmit={handleAddDev}\n          currentDev={currentDev}\n        />\n      </aside>\n      <main>\n        <ul>\n          {devs.map(dev => (\n            <DevItem \n              key={dev._id} \n              dev={dev}\n              editDev={editDev}\n              removeDev={removeDev}\n            />\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}